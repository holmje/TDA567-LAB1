Given the method:

    public boolean addWorkingPeriod(String employee, int starttime, int endtime);

With the specification:

    requires:
      employee is a non-null string
    ensures:
      if starttime < 0 or endtime >= size or starttime > endtime then
        returns false and the schedule is unchanged
      otherwise
        if for any hour in the interval starttime to endtime the length of workingEmployees is equal to requiredNumber then
          returns false and the schedule is unchanged
        otherwise
          if for any hour in the interval starttime to endtime there is a string in workingEmployees which equal employee then
            returns false and the schedule is unchanged
          otherwise
            returns true,
            for i between starttime and endtime, workingEmployees contain a string equal to employee and
            the rest of the schedule is unchanged


    Input Space: employee != null

    Partition #1: No setReqiuiredNumber
        addWorkerWhenNoneIsNeeded_addWorkingPeriod_part1:
            input: "jesper[0], 3, 6", expected: DoNotAddWorker

    Partition #2: No serRequiredNumber
        addWorkerWhenNoneIsNeeded_addWorkingPeriod_part2:
            input: "jesper[0], 3, 6", expected: ReturnFalse

    Partition #3: starttime < endtime and setRequiredNumber(1, 3, 6)
        addWorkerOnePerson_addWorkingPeriod_part3:
            input: "jesper[0], 2, 5", expected: addWorker

    Partition #4: starttime < endtime and setRequiredNumber(1, 3, 6)
        addWorkerOnePerson_addWorkingPeriod_part4:
            input: "jesper[0], 2, 5", expected: returnTrue

    Partition #5: starttime < 0 and setRequiredNumber(1, 3, 6)
        startTimeLessThanZero_addWorkingPeriod_part5:
            input: "jesper[0], -1, 3", expected DoNotAddWorker

    Partition #6: starttime < 0 and setRequiredNumber(1, 3, 6)
        startTimeLessThanZero_addWorkingPeriod_part6:
            input: "jesper[0], -1, 3", expected returnFalse

    Partition #7: endTime >= size and setRequiredNumber(1, 3, 6)
        endTimeIsGreaterOrEqualToSize_addWorkingPeriod_part7:
            input: "jesper[0], 6, 24", expected DoNotAddWorker

    Partition #8: endTime >= size and setRequiredNumber(1, 3, 6)
        endTimeIsGreaterOrEqualToSize_addWorkingPeriod_part8:
            input: "jesper[0], 6, 24", expected returnFalse

    Partition #9: starttime > endtime and setRequiredNumber(1, 3, 6)
        starttimeIsGreaterThanEndTime_addWorkingPeriod_part9:
            input: "jesper[0], 6, 3", expected: DoNotAddWorker

    partition #10: starttime > endtime and setRequiredNumber(1, 3, 6)
        starttimeIsGreaterThanEndTime_addWorkingPeriod_part10:
            input: "jesper[0], 6, 3", expected: returnFalse

    partition #11: setRequiredNumber(1, 3, 6)
        addMoreWorkersThanNeeded_addWorkingPeriod_part11:
            input: "jesper[0], 3, 6"
                   "johan[0], 3, 6"
            expected: DoNotAddSecondWorker

    partition #12: setRequiredNumber(1, 3, 6)
        addMoreWorkersThanNeeded_addWorkingPeriod_part12:
            input: "jesper[0], 3, 6"
                   "johan[0], 3, 6"
            expected: returnFalse

    partition #13: setRequiredNumber(3, 3, 6)
        addLessWorkersThanNeeded_addWorkingPeriod_part13:
            input: "jesper[0], 3, 6"
                   "johan[0], 3, 6"
            expected: AddWorkers

    partition #14: setRequiredNumber(3, 3, 6)
        addLessWorkersThanNeeded_addWorkingPeriod_part14:
            input: "jesper[0], 3, 6"
                   "johan[0], 3, 6"
            expected: returnTrue

    partition #15: setRequiredNumber(1, 3, 6)
        addWorkerToLargerPeriodThanNeeded_addWorkingPeriod_part15:
            input: "jesper[0], 1, 6", expected: DoNotAddWorker

    partition #16: setRequiredNumber(1, 3, 6)
        addWorkerToLargerPeriodThanNeeded_addWorkingPeriod_part16:
            input: "jesper[0], 1, 6", expected: returnFalse

    partition #17: starttime = endtime and setRequiredNumber(1, 3, 3)
        startTimeEqualToEndTime_addWorkingPeriod_part17:
            input: "jesper[0], 3, 3", expected addWorker

    partition #18: starttime = endtime and setRequiredNumber(1, 3, 3)
        startTimeEqualToEndTime_addWorkingPeriod_part18:
            input: "jesper[0], 3, 3", expected returnTrue

    partition #19: setRequiredNumber(1, 3, 6)
        addSameWorkerMultipleTimes_addWorkingPeriod_part19:
            input: "jesper[0], 3, 6"
                   "jesper[0], 3, 6"
            expected: DoNotAddWorkerSecondTime

    partition #20: setRequiredNumber(1, 3, 6)
        addSameWorkerMultipleTimes_addWorkingPeriod_part19:
            input: "jesper[0], 3, 6"
                   "jesper[0], 3, 6"
            expected: returnFalse